name: Build and Push Docker Image

on:
  push:
    branches:
      - master
      - main
      - develop
    paths:
      - 'messaging_app/**'
      - 'Dockerfile'
      - '.github/workflows/dep.yaml'
  pull_request:
    branches:
      - master
      - main
      - develop
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Custom Docker image tag'
        required: false
        default: 'latest'

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/messaging-app

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Docker image scan
        run: |
          echo "Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          echo "Built successfully and pushed to Docker Hub"

      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          format: cyclonedx-json
          output-file: sbom.json

      - name: Upload SBOM
        uses: actions/upload-artifact@v3
        with:
          name: sbom
          path: sbom.json

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## üê≥ Docker Image Built\n\n‚úÖ Image: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}\`\n\nThis Docker image will be pushed to Docker Hub after merging.`
            })

  verify-image:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull and verify image
        run: |
          echo "Pulling image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          
          echo ""
          echo "Image details:"
          docker inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} | grep -E '"Architecture"|"Os"|"Created"'
          
          echo ""
          echo "Image size:"
          docker images ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Run container test
        run: |
          echo "Testing container..."
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} echo "‚úÖ Container runs successfully"

  push-tags:
    needs: verify-image
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push versioned tags
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          
          echo "Pulling commit image..."
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          
          echo "Tagging as version: $TAG"
          docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$TAG
          
          echo "Pushing version tag..."
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$TAG
          
          echo "‚úÖ Image pushed as: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$TAG"

  notify:
    needs: [build-and-push, verify-image]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Build status notification
        run: |
          echo "=== Docker Build Workflow Summary ==="
          echo ""
          echo "‚úÖ Build Status: ${{ job.status }}"
          echo "üì¶ Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          echo "üè∑Ô∏è  Tags: latest, ${{ github.sha }}, ${{ github.ref_name }}"
          echo "üîó Docker Hub: https://hub.docker.com/r/${{ secrets.DOCKER_USERNAME }}/messaging-app"
          echo ""
          echo "Workflow Details:"
          echo "  - Repository: ${{ github.repository }}"
          echo "  - Branch: ${{ github.ref_name }}"
          echo "  - Commit: ${{ github.sha }}"
          echo "  - Run: ${{ github.run_id }}"
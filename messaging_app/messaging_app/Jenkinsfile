pipeline {
    agent any
    
    stages {
        stage('Checkout') {
            steps {
                echo '========== Checking out code =========='
                checkout([$class: 'GitSCM', 
                    branches: [[name: '*/master']], 
                    userRemoteConfigs: [[
                        url: 'https://github.com/olumbah1/alx-backend-python.git',
                        credentialsId: 'github-credentials'
                    ]]
                ])
            }
        }
        
        stage('Setup') {
            steps {
                echo '========== Setting up Python =========='
                script {
                    if (isUnix()) {
                        sh '''
                            python3 -m venv venv
                            . venv/bin/activate
                            pip install --upgrade pip
                            pip install -r requirements.txt
                        '''
                    } else {
                        bat '''
                            python -m venv venv
                            venv\\Scripts\\activate.bat
                            python -m pip install --upgrade pip
                            pip install -r requirements.txt
                        '''
                    }
                }
            }
        }
        
        stage('Run Tests') {
            steps {
                echo '========== Running pytest =========='
                script {
                    if (isUnix()) {
                        sh '''
                            . venv/bin/activate
                            pytest tests/ --junitxml=test-results.xml --cov=. --cov-report=html
                        '''
                    } else {
                        bat '''
                            venv\\Scripts\\activate.bat
                            pytest tests/ --junitxml=test-results.xml --cov=. --cov-report=html
                        '''
                    }
                }
            }
        }
    }
    
    post {
        always {
            junit 'test-results.xml'
        }
        success {
            echo '✓ Tests passed!'
        }
        failure {
            echo '✗ Tests failed!'
        }
    }
}
pipeline {
    agent any
    
    stages {
        stage('Checkout') {
            steps {
                echo '========== Checking out code from GitHub =========='
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/master']],
                    userRemoteConfigs: [[
                        url: 'https://github.com/olumbah1/alx-backend-python.git',
                        credentialsId: 'github-credentials'
                    ]]
                ])
            }
        }
        
        stage('Install Dependencies') {
            steps {
                echo '========== Installing Python dependencies =========='
                sh '''
                    cd messaging_app
                    python3 -m venv venv
                    . venv/bin/activate
                    pip install --upgrade pip
                    pip install -r requirements.txt
                    pip install pytest pytest-cov pytest-html
                '''
            }
        }
        
        stage('Run Tests') {
            steps {
                echo '========== Running pytest =========='
                sh '''
                    cd messaging_app
                    pytest tests/ --junitxml=test-results.xml --html=test-report.html --self-contained-html -v
                '''
            }
            post {
                always {
                    junit 'messaging_app/test-results.xml'
                    publishHTML(target: [
                        reportName: 'Test Report',
                        reportDir: 'messaging_app',
                        reportFiles: 'test-report.html',
                        keepAll: true,
                        allowMissing: false,
                        alwaysLinkToLastBuild: true
                    ])
                }
            }
        }
    }
    
    post {
        always {
            echo '========== Pipeline Execution Complete =========='
        }
        success {
            echo '✅ Pipeline succeeded!'
        }
        failure {
            echo '❌ Pipeline failed!'
        }
    }
}